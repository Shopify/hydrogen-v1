
name: Deploy
on: [push]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          check-latest: true

      - name: Get yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        id: 'install-dependencies'
        run: yarn

      - name: Generate deployment ID
        id: deployment-id
        run: |
          yarn add ulid
          echo "::set-output name=ID::$(LC_ALL=C </dev/urandom tr -dc "0123456789abcdefghjkmnpqrstvwxyz" | head -c 9)"

      - name: Set asset base URL
        shell: bash
        run: echo "::set-output name=URL::https://cdn.shopify.com/oxygen/55145660472/9863224/${{ steps.deployment-id.outputs.ID }}/"
        id: base-url

      - name: Production build
        id: storefront-build
        run: HYDROGEN_ASSET_BASE_URL=${{ steps.base-url.outputs.URL }} yarn build

      - name: Publish to Oxygen
        id: deploy
        uses: shopify/oxygenctl-action@v2
        with:
          deployment_id: ${{ steps.deployment-id.outputs.ID }}
          oxygen_deployment_token: ${{ secrets.OXYGEN_DEPLOYMENT_TOKEN }}

      # Create GitHub Deployment
      - name: Create GitHub Deployment
        uses: shopify/github-deployment-action@v1
        if: always()
        with:
          token: ${{ github.token }}
          environment: 'preview'
          preview_url: ${{ steps.deploy.outputs.url }}
          description: ${{ github.event.head_commit.message }}
