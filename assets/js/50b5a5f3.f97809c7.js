"use strict";(self.webpackChunkdocs_v_1=self.webpackChunkdocs_v_1||[]).push([[8864],{5680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>m});var a=t(6540);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},g="mdxType",y={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),g=c(t),u=o,m=g["".concat(s,".").concat(u)]||g[u]||y[u]||r;return t?a.createElement(m,i(i({ref:n},p),{},{components:t})):a.createElement(m,i({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[g]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5020:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>y,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var a=t(8168),o=(t(6540),t(5680));const r={},i="Configure analytics",l={unversionedId:"tutorials/analytics/configure-analytics",id:"tutorials/analytics/configure-analytics",title:"Configure analytics",description:"Hydrogen 2.0 is out now. These archival Hydrogen 1.0 docs are provided only to assist developers during their upgrade process. Please migrate as soon as possible.",source:"@site/docs/tutorials/analytics/configure-analytics.md",sourceDirName:"tutorials/analytics",slug:"/tutorials/analytics/configure-analytics",permalink:"/hydrogen-v1/tutorials/analytics/configure-analytics",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"hydrogen",previous:{title:"Analytics",permalink:"/hydrogen-v1/tutorials/analytics/"},next:{title:"User authentication",permalink:"/hydrogen-v1/tutorials/authentication/"}},s={},c=[{value:"Subscribe to events",id:"subscribe-to-events",level:2},{value:"Unsubscribe from events",id:"unsubscribe-from-events",level:2},{value:"Configure custom events",id:"configure-custom-events",level:2},{value:"Retrieve data from other parts of your Hydrogen storefront",id:"retrieve-data-from-other-parts-of-your-hydrogen-storefront",level:3},{value:"Capture customer interaction data",id:"capture-customer-interaction-data",level:4},{value:"Capture events in client components",id:"capture-events-in-client-components",level:4},{value:"Retrieve analytics from client components",id:"retrieve-analytics-from-client-components",level:4},{value:"Retrieve data that&#39;s available elsewhere",id:"retrieve-data-thats-available-elsewhere",level:4},{value:"Trigger analytics events on navigation",id:"trigger-analytics-events-on-navigation",level:4},{value:"Send analytics data from the server-side",id:"send-analytics-data-from-the-server-side",level:2},{value:"Performance metrics",id:"performance-metrics",level:2},{value:"Opt-in to page load performance metrics",id:"opt-in-to-page-load-performance-metrics",level:3},{value:"Log performance debug metrics",id:"log-performance-debug-metrics",level:3},{value:"Implement a client analytics connector",id:"implement-a-client-analytics-connector",level:2},{value:"Test analytics connectors end-to-end",id:"test-analytics-connectors-end-to-end",level:2}],p={toc:c},g="wrapper";function y(e){let{components:n,...t}=e;return(0,o.yg)(g,(0,a.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"configure-analytics"},"Configure analytics"),(0,o.yg)("admonition",{type:"tip"},(0,o.yg)("p",{parentName:"admonition"},"Hydrogen 2.0 is out now. These archival Hydrogen 1.0 docs are provided only to assist developers during their upgrade process. Please ",(0,o.yg)("a",{parentName:"p",href:"/migrate"},"migrate")," as soon as possible.")),(0,o.yg)("p",null,"Hydrogen includes ",(0,o.yg)("a",{parentName:"p",href:"/tutorials/analytics/"},"support for analytics")," that give you insight into how customers are interacting with a custom storefront."),(0,o.yg)("p",null,"This guide describes how to subscribe to the default events that Hydrogen offers, configure custom events, send analytics data from the server-side, and unsubscribe from events. It also provides example implementations of client analytics connectors, and shows how to write an end-to-end (E2E) for testing analytics connectors."),(0,o.yg)("h2",{id:"subscribe-to-events"},"Subscribe to events"),(0,o.yg)("p",null,"Subscribe to an event to enable your Hydrogen app to listen for the event. The following steps describe how to subscribe to the ",(0,o.yg)("inlineCode",{parentName:"p"},"PAGE_VIEW")," event."),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Create a new client component in the ",(0,o.yg)("inlineCode",{parentName:"p"},"/components")," directory of your Hydrogen app. For example, ",(0,o.yg)("inlineCode",{parentName:"p"},"components/AnalyticsListener.client.jsx"),".")),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"In your client component, add the following code to initialize the subscription to the ",(0,o.yg)("inlineCode",{parentName:"p"},"PAGE_VIEW")," event:"),(0,o.yg)("pre",{parentName:"li"},(0,o.yg)("code",{parentName:"pre",className:"language-jsx"},"// components/AnalyticsListener.client.jsx\n\nimport {ClientAnalytics} from '@shopify/hydrogen';\n\nlet init = false;\nexport default function AnalyticsListener() {\n useEffect(() => {\n   // Set up common page-specific data\n   ClientAnalytics.pushToPageAnalyticsData({\n     userLocale: navigator.language,\n   });\n\n   if (!init) {\n     // One-time initialization\n     init = true;\n     ClientAnalytics.subscribe(\n       ClientAnalytics.eventNames.PAGE_VIEW,\n       (payload) => {\n         console.log(payload);\n       }\n     );\n   }\n });\n\n return null;\n}\n")))),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},"Add your client component to your app's top-level React component (",(0,o.yg)("inlineCode",{parentName:"li"},"App.server.jsx"),"):")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"```jsx\n// App.server.jsx\n\nfunction App({routes}) {\n return (\n   <>\n     <Suspense fallback={<LoadingFallback />}>...</Suspense>\n     <AnalyticsListener />\n   </>\n );\n}\n```\n")),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},"Test the event by refreshing the root page of your app. The ",(0,o.yg)("inlineCode",{parentName:"li"},"PAGE_VIEW")," payload object details display in the browser\u2019s console log.")),(0,o.yg)("h2",{id:"unsubscribe-from-events"},"Unsubscribe from events"),(0,o.yg)("p",null,"You can unsubscribe from events that you no longer want your Hydrogen app to track. The following example shows how to unsubscribe from the ",(0,o.yg)("inlineCode",{parentName:"p"},"accepts-marketing")," event:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-jsx"},"// components/SomeComponent.client.jsx\n\nuseEffect(() => {\n  const acceptMarketingSubscriber = ClientAnalytics.subscribe(\n    'accepts-marketing',\n    (payload) => {\n      console.log(payload);\n    }\n  );\n\n  return function cleanup() {\n    acceptMarketingSubscriber.unsubscribe();\n  };\n});\n")),(0,o.yg)("h2",{id:"configure-custom-events"},"Configure custom events"),(0,o.yg)("p",null,"Aside from the ",(0,o.yg)("a",{parentName:"p",href:"/hydrogen-v1/tutorials/analytics/#default-events"},"default events")," that Hydrogen supports, you can also configure custom events. For example, you might want to configure a custom event that tracks the pages where a promotional banner is being clicked the most."),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Emit a custom event by using the publish method and specifying a custom event name:"),(0,o.yg)("pre",{parentName:"li"},(0,o.yg)("code",{parentName:"pre",className:"language-jsx"},'// components/Banner.client.jsx\n\n<Banner onClick={(event) => {\n  ClientAnalytics.publish(\'select_promotion\', true, {\n    creative_name: "Summer Banner",\n    creative_slot: "featured_app_1",\n    ...\n  })\n}}\n')))),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"In ",(0,o.yg)("inlineCode",{parentName:"p"},"AnalyticsListener"),", use the ",(0,o.yg)("inlineCode",{parentName:"p"},"ClientAnalytics")," component to subscribe to your custom event by name:"),(0,o.yg)("pre",{parentName:"li"},(0,o.yg)("code",{parentName:"pre",className:"language-jsx"},"// components/AnalyticsListener.client.jsx\n\nimport {ClientAnalytics} from '@shopify/hydrogen';\n\nlet init = false;\nexport default function AnalyticsListener() {\n  useEffect(() => {\n    // Set up common page-specific data\n    ClientAnalytics.pushToPageAnalyticsData({\n      userLocale: navigator.language,\n    });\n\n    if (!init) {\n      // One-time initialization\n      init = true;\n      ClientAnalytics.subscribe(\n      'select_promotion',\n        (payload) => {\n          console.log('select_promotion payload', payload);\n        }\n      );\n    }\n  });\n\n  return null;\n}\n")))),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"Note:\nYou can test the custom event subscription by clicking the button with the analytics event attached. The custom fields ",(0,o.yg)("inlineCode",{parentName:"p"},"creative_name")," and ",(0,o.yg)("inlineCode",{parentName:"p"},"creative_slot")," are added to the payload.")),(0,o.yg)("h3",{id:"retrieve-data-from-other-parts-of-your-hydrogen-storefront"},"Retrieve data from other parts of your Hydrogen storefront"),(0,o.yg)("p",null,"You can capture analytics data wherever you make queries. The following are some examples:"),(0,o.yg)("h4",{id:"capture-customer-interaction-data"},"Capture customer interaction data"),(0,o.yg)("p",null,"You can capture data on how customers are interacting with your storefront."),(0,o.yg)("p",null,"The following example captures the Shopify product collection that a customer has interacted with. ",(0,o.yg)("inlineCode",{parentName:"p"},"collectionName")," and ",(0,o.yg)("inlineCode",{parentName:"p"},"collectionId")," fields are added to the ",(0,o.yg)("inlineCode",{parentName:"p"},"PAGE_VIEW")," event object:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"// collections/[handle].server.js\n\nconst {data} = useShopQuery({\n  query: QUERY,\n  variables: {\n    handle,\n    country: country.isoCode,\n    numProducts: collectionProductCount,\n  },\n  preload: true,\n});\n\nconst collection = data.collection;\n\n// Use the `useServerAnalytics` hook to supply data\n// when events are published\nuseServerAnalytics({\n  canonicalPageUrl: `/collections/${handle}`,\n  collectionName: collection.title,\n  collectionId: collection.id,\n});\n")),(0,o.yg)("p",null,"When the collection page is reloaded, a ",(0,o.yg)("inlineCode",{parentName:"p"},"PAGE_VIEW")," event displays in the console that includes the new ",(0,o.yg)("inlineCode",{parentName:"p"},"collectionName")," and ",(0,o.yg)("inlineCode",{parentName:"p"},"collectionId")," fields."),(0,o.yg)("h4",{id:"capture-events-in-client-components"},"Capture events in client components"),(0,o.yg)("p",null,"You can also capture events in client components, like when a customer makes a query that adds an item to their cart."),(0,o.yg)("p",null,"The following example captures when a customer clicks a promotional banner:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"// *.client.js\n\n// some.client.jsx\nuseEffect(() => {\n  ClientAnalytics.pushToPageAnalyticsData({\n    heroBanner: 'hero-1',\n  });\n});\n")),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"Note:\nAll ",(0,o.yg)("inlineCode",{parentName:"p"},"ClientAnalytics.*")," function calls must be wrapped in a ",(0,o.yg)("a",{parentName:"p",href:"https://reactjs.org/docs/hooks-reference.html#useeffect"},(0,o.yg)("inlineCode",{parentName:"a"},"useEffect"))," hook.")),(0,o.yg)("h4",{id:"retrieve-analytics-from-client-components"},"Retrieve analytics from client components"),(0,o.yg)("p",null,"The following example shows how to retrieve page analytics data from a client component:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"// *.client.js\n\nClientAnalytics.getPageAnalyticsData();\n")),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"Caution:\nDon't use the data from ",(0,o.yg)("inlineCode",{parentName:"p"},"ClientAnalytics.getPageAnalyticsData()")," for rendering. This will cause occasional mismatches during hydration.")),(0,o.yg)("h4",{id:"retrieve-data-thats-available-elsewhere"},"Retrieve data that's available elsewhere"),(0,o.yg)("p",null,"To retrieve the data that's available elsewhere in your Hydrogen storefront, you can add the following code to your server components:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"// *.server.js\n\nconst serverDataLayer = useServerAnalytics();\n")),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"Caution:\nDon't use the data from ",(0,o.yg)("inlineCode",{parentName:"p"},"useServerAnalytics()")," for rendering. This causes occasional mismatches during hydration.")),(0,o.yg)("h4",{id:"trigger-analytics-events-on-navigation"},"Trigger analytics events on navigation"),(0,o.yg)("p",null,"If you need to trigger additional analytics events on navigation, then you can specify a list of analytics events to publish in your server component."),(0,o.yg)("p",null,"The following example publishes when a customer views a product:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"// *.server.js\n\nconst serverDataLayer = useServerAnalytics({\n  publishEventsOnNavigate: [ClientAnalytics.eventNames.VIEWED_PRODUCT],\n});\n")),(0,o.yg)("h2",{id:"send-analytics-data-from-the-server-side"},"Send analytics data from the server-side"),(0,o.yg)("p",null,"To send analytics data from the server-side, complete the following steps:"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Create a client-side analytics listener that makes a fetch call to the ",(0,o.yg)("inlineCode",{parentName:"p"},"__event")," endpoint."),(0,o.yg)("pre",{parentName:"li"},(0,o.yg)("code",{parentName:"pre",className:"language-jsx"},"// components/AnalyticsListener.client.jsx\n\nimport {ClientAnalytics} from '@shopify/hydrogen';\n\nlet init = false;\nexport default function AnalyticsListener() {\n useEffect(() => {\n   // Set up common page-specific data\n   ClientAnalytics.pushToPageAnalyticsData({\n     userLocale: navigator.language,\n   });\n\n   if (!init) {\n     // One-time initialization\n     init = true;\n     ClientAnalytics.subscribe(\n       ClientAnalytics.eventNames.PAGE_VIEW,\n       (payload) => {\n         try {\n           ClientAnalytics.pushToServer({\n             method: 'post',\n             headers: {\n               'cache-control': 'no-cache',\n               'Content-Type': 'application/json',\n             },\n             body: JSON.stringify(payload),\n           });\n         } catch (e) {\n           // Error handling\n         }\n       }\n     );\n   }\n });\n\n return null;\n}\n")))),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Create a server-side analytics connector:"),(0,o.yg)("pre",{parentName:"li"},(0,o.yg)("code",{parentName:"pre",className:"language-jsx"},"// MyServerAnalyticsConnector.jsx\n\nexport const MyServerAnalyticsConnector = {\n  request(requestUrl, requestHeader, data, contentType) {\n    // Send your analytics request to third-party analytics\n    // Make sure to return a promise, for example\n    //\n    // return fetch('your_analytic_endpoint')\n    return Promise.resolve();\n  },\n};\n")))),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Pass the analytics connector into the ",(0,o.yg)("inlineCode",{parentName:"p"},"serverAnalyticsConnectors")," configuration:"),(0,o.yg)("pre",{parentName:"li"},(0,o.yg)("code",{parentName:"pre",className:"language-js"},"// hydrogen.config.ts\n\nimport * as MyServerAnalyticsConnector from '/components/MyServerAnalyticsConnector.jsx'\n\nexport default defineConfig({\n  ...\n  serverAnalyticsConnectors: [MyServerAnalyticsConnector]\n});\n")))),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"> Tip:\n> Refer to the [request function parameters](/hydrogen-v1/tutorials/analytics/#parameters) for `ServerAnalyticsConnector`.\n")),(0,o.yg)("h2",{id:"performance-metrics"},"Performance metrics"),(0,o.yg)("p",null,"Hydrogen's ",(0,o.yg)("a",{parentName:"p",href:"/tutorials/analytics/"},"performance metrics")," provide insight into how fast pages are loading in your Hydrogen storefront."),(0,o.yg)("h3",{id:"opt-in-to-page-load-performance-metrics"},"Opt-in to page load performance metrics"),(0,o.yg)("p",null,"Include ",(0,o.yg)("inlineCode",{parentName:"p"},"<PerformanceMetrics />")," in ",(0,o.yg)("inlineCode",{parentName:"p"},"App.server.js"),"."),(0,o.yg)("h3",{id:"log-performance-debug-metrics"},"Log performance debug metrics"),(0,o.yg)("p",null,"To see performance debug metrics displayed in your browser console log, then include ",(0,o.yg)("inlineCode",{parentName:"p"},"<PerformanceMetricsDebug />")," in ",(0,o.yg)("inlineCode",{parentName:"p"},"App.server.js"),":"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-jsx"},"// App.server.jsx\n\nimport {\n  PerformanceMetrics,\n  PerformanceMetricsDebug,\n  ...\n} from '@shopify/hydrogen';\n\nfunction App({routes}) {\n  return (\n    <Suspense fallback={<LoadingFallback />}>\n      <ShopifyProvider shopifyConfig={shopifyConfig}>\n        ...\n        <PerformanceMetrics />\n        {import.meta.env.DEV && <PerformanceMetricsDebug />}\n      </ShopifyProvider>\n    </Suspense>\n  );\n}\n")),(0,o.yg)("h2",{id:"implement-a-client-analytics-connector"},"Implement a client analytics connector"),(0,o.yg)("p",null,"The following example shows an implementation of a client analytics connector with ",(0,o.yg)("a",{parentName:"p",href:"https://developers.google.com/analytics/devguides/collection/ga4"},"Google Analytics 4"),":"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-jsx"},"// components/GoogleAnalytics.client.jsx\n\nimport {useEffect} from 'react';\nimport {ClientAnalytics, loadScript} from '@shopify/hydrogen';\n\nconst GTAG_ID = '<YOUR_GTAG_ID>';\nconst URL = `https://www.googletagmanager.com/gtag/js?id=${GTAG_ID}`;\nlet init = false;\n\nexport function GoogleAnalytics() {\n  useEffect(() => {\n    if (!init) {\n      init = true;\n\n      // Load the gtag script\n      loadScript(URL).catch(() => {});\n\n      function trackPageView(payload) {\n        gtag('event', 'page_view');\n      }\n\n      // gtag initialization code\n      window.dataLayer = window.dataLayer || [];\n      function gtag() {\n        dataLayer.push(arguments);\n      }\n      gtag('js', new Date());\n\n      // Configure your gtag\n      gtag('config', GTAG_ID, {\n        send_page_view: false,\n      });\n\n      // Listen for events from Hydrogen\n      ClientAnalytics.subscribe(\n        ClientAnalytics.eventNames.PAGE_VIEW,\n        trackPageView\n      );\n\n      ClientAnalytics.hasSentFirstPageView() &&\n        trackPageView(ClientAnalytics.getPageAnalyticsData());\n    }\n  });\n\n  return null;\n}\n")),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"Note:\nThe code calls ",(0,o.yg)("inlineCode",{parentName:"p"},"loadScript")," instead of ",(0,o.yg)("a",{parentName:"p",href:"/hooks/primitive/useloadscript/"},(0,o.yg)("inlineCode",{parentName:"a"},"useLoadScript")),". ",(0,o.yg)("inlineCode",{parentName:"p"},"useLoadScript")," is a hook and can't be called inside ",(0,o.yg)("inlineCode",{parentName:"p"},"useEffect"),".")),(0,o.yg)("p",null,"The following example shows an implementation of a client analytics connector using the ",(0,o.yg)("a",{parentName:"p",href:"https://getanalytics.io/plugins/google-tag-manager/"},"getanalytics.io Google Tag Manager package"),":"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-jsx"},"// components/GoogleTagManager.client.jsx\n\nimport Analytics from 'analytics';\nimport googleTagManager from '@analytics/google-tag-manager';\nimport {useEffect} from 'react';\n\nlet init = false;\nexport default function GTM() {\n  useEffect(() => {\n    if (!init) {\n      // One-time initialization\n      init = true;\n      Analytics({\n        app: 'hydrogen-app',\n        plugins: [\n          googleTagManager({\n            containerId: '<YOUR_GTM_ID>',\n          }),\n        ],\n      });\n    }\n  });\n  return null;\n}\n")),(0,o.yg)("h2",{id:"test-analytics-connectors-end-to-end"},"Test analytics connectors end-to-end"),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"Note:\nThis test also works for ",(0,o.yg)("a",{parentName:"p",href:"https://getanalytics.io/plugins/google-tag-manager/"},"Google Tag Manager")," if you've configured it with Google Analytics 4.")),(0,o.yg)("p",null,"The following example shows how to write an end-to-end (E2E) test for ",(0,o.yg)("a",{parentName:"p",href:"https://developers.google.com/analytics/devguides/collection/ga4"},"Google Analytics 4"),"."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-jsx"},"// tests/e2e/analytics.ga4.test.js\n\nimport {startHydrogenServer} from '../utils';\n\nconst ANALYTICS_ENDPOINT = 'https://www.google-analytics.com/g/collect';\nconst endpointRegex = new RegExp(`^${ANALYTICS_ENDPOINT}`);\n\ndescribe('Google Analytics 4', () => {\n  let hydrogen;\n  let session;\n\n  beforeAll(async () => {\n    hydrogen = await startHydrogenServer();\n  });\n\n  beforeEach(async () => {\n    session = await hydrogen.newPage();\n  });\n\n  afterAll(async () => {\n    await hydrogen.cleanUp();\n  });\n\n  it('should emit page_view', async () => {\n    // Wait for the Google Analytics 4 network call\n    const [request] = await Promise.all([\n      // Test if the request matches a Google Analytics 4 analytics pixel\n      session.page.waitForRequest((request) =>\n        endpointRegex.test(request.url())\n      ),\n      // Navigate to the home page\n      session.visit('/'),\n    ]);\n\n    // Validate data on the Google Analytics 4 analytics pixel\n    const ga4Event = new URL(request.url());\n    expect(ga4Event.searchParams.en).toEqual('page_view');\n  }, 60000);\n});\n")))}y.isMDXComponent=!0}}]);