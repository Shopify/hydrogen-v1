"use strict";(self.webpackChunkdocs_v_1=self.webpackChunkdocs_v_1||[]).push([[3538],{5680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>u});var a=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},s="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),s=p(n),m=r,u=s["".concat(d,".").concat(m)]||s[m]||g[m]||o;return n?a.createElement(u,l(l({ref:t},c),{},{components:n})):a.createElement(u,l({ref:t},c))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i[s]="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5683:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>g,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=n(8168),r=(n(6540),n(5680));const o={},l="CartProvider",i={unversionedId:"components/cart/cartprovider",id:"components/cart/cartprovider",title:"CartProvider",description:"The CartProvider component creates a context for using a cart. It creates a cart object and callbacks",source:"@site/docs/components/cart/cartprovider.md",sourceDirName:"components/cart",slug:"/components/cart/cartprovider",permalink:"/hydrogen-v1/components/cart/cartprovider",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"hydrogen",previous:{title:"CartLines",permalink:"/hydrogen-v1/components/cart/cartlines"},next:{title:"CartShopPayButton",permalink:"/hydrogen-v1/components/cart/cartshoppaybutton"}},d={},p=[{value:"Required access scopes",id:"required-access-scopes",level:2},{value:"Example code",id:"example-code",level:2},{value:"Props",id:"props",level:2},{value:"Cart fragment",id:"cart-fragment",level:2},{value:"Component type",id:"component-type",level:2},{value:"Related components",id:"related-components",level:2},{value:"Related hooks",id:"related-hooks",level:2}],c={toc:p},s="wrapper";function g(e){let{components:t,...n}=e;return(0,r.yg)(s,(0,a.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"cartprovider"},"CartProvider"),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"CartProvider")," component creates a context for using a cart. It creates a cart object and callbacks\nthat any descendent component can access using the ",(0,r.yg)("inlineCode",{parentName:"p"},"useCart")," hook and related hooks. ",(0,r.yg)("inlineCode",{parentName:"p"},"CartProvider")," also carries out\nany callback props when a relevant action is performed. For example, if an ",(0,r.yg)("inlineCode",{parentName:"p"},"onLineAdd")," callback is provided,\nthen the callback is called when a new line item is successfully added to the cart."),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"CartProvider")," component must be a descendent of the ",(0,r.yg)("inlineCode",{parentName:"p"},"ShopifyProvider")," component."),(0,r.yg)("p",null,"You must use this component to use the following:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"The ",(0,r.yg)("inlineCode",{parentName:"p"},"useCart")," hook or related hooks")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"The ",(0,r.yg)("inlineCode",{parentName:"p"},"AddToCartButton")," component"))),(0,r.yg)("h2",{id:"required-access-scopes"},"Required access scopes"),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"CartProvider")," component requires the following Storefront API ",(0,r.yg)("a",{parentName:"p",href:"https://shopify.dev/api/usage/access-scopes#unauthenticated-access-scopes"},"access scopes"),":"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"unauthenticated_read_customers")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"unauthenticated_write_customers"))),(0,r.yg)("h2",{id:"example-code"},"Example code"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"import {CartProvider} from '@shopify/hydrogen';\n\nexport function App() {\n  return <CartProvider>{/* Your JSX */}</CartProvider>;\n}\n")),(0,r.yg)("h2",{id:"props"},"Props"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"children"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"React.ReactNode")),(0,r.yg)("td",{parentName:"tr",align:null},"Any ",(0,r.yg)("inlineCode",{parentName:"td"},"ReactNode")," elements.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data?"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"Cart")),(0,r.yg)("td",{parentName:"tr",align:null},"An object with fields that correspond to the Storefront API's ",(0,r.yg)("a",{parentName:"td",href:"https://shopify.dev/api/storefront/latest/objects/cart"},"Cart object"),".")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"cartFragment"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"A ",(0,r.yg)("a",{parentName:"td",href:"#cart-fragment"},"fragment")," used to query the Storefront API's ",(0,r.yg)("a",{parentName:"td",href:"https://shopify.dev/api/storefront/latest/objects/cart"},"Cart object")," for all queries and mutations. A default value is used if no argument is provided.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"numCartLines?"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"number")),(0,r.yg)("td",{parentName:"tr",align:null},"A callback that's invoked when the process to create a cart begins, but before the cart is created in the Storefront API.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"onCreate?"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"() => void")),(0,r.yg)("td",{parentName:"tr",align:null},"A callback that's invoked when the process to create a cart begins, but before the cart is created in the Storefront API.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"onLineAdd?"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"() => void")),(0,r.yg)("td",{parentName:"tr",align:null},"A callback that's invoked when the process to add a line item to the cart begins, but before the line item is added to the Storefront API.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"onLineRemove?"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"() => void")),(0,r.yg)("td",{parentName:"tr",align:null},"A callback that's invoked when the process to remove a line item to the cart begins, but before the line item is removed from the Storefront API.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"onLineUpdate?"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"() => void")),(0,r.yg)("td",{parentName:"tr",align:null},"A callback that's invoked when the process to update a line item in the cart begins, but before the line item is updated in the Storefront API.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"onNoteUpdate?"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"() => void")),(0,r.yg)("td",{parentName:"tr",align:null},"A callback that's invoked when the process to add or update a note in the cart begins, but before the note is added or updated in the Storefront API.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"onBuyerIdentityUpdate?"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"() => void")),(0,r.yg)("td",{parentName:"tr",align:null},"A callback that's invoked when the process to update the buyer identity begins, but before the buyer identity is updated in the Storefront API.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"onAttributesUpdate?"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"() => void")),(0,r.yg)("td",{parentName:"tr",align:null},"A callback that's invoked when the process to update the cart attributes begins, but before the attributes are updated in the Storefront API.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"onDiscountCodesUpdate?"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"() => void")),(0,r.yg)("td",{parentName:"tr",align:null},"A callback that's invoked when the process to update the cart discount codes begins, but before the discount codes are updated in the Storefront API.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"onCreateComplete?"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"() => void")),(0,r.yg)("td",{parentName:"tr",align:null},"A callback that's invoked when the process to create a cart completes successfully.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"onLineAddComplete?"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"() => void")),(0,r.yg)("td",{parentName:"tr",align:null},"A callback that's invoked when the process to add a line item to the cart completes successfully.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"onLineRemoveComplete?"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"() => void")),(0,r.yg)("td",{parentName:"tr",align:null},"A callback that's invoked when the process to remove a line item to the cart completes successfully.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"onLineUpdateComplete?"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"() => void")),(0,r.yg)("td",{parentName:"tr",align:null},"A callback that's invoked when the process to update a line item in the cart completes successfully.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"onNoteUpdateComplete?"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"() => void")),(0,r.yg)("td",{parentName:"tr",align:null},"A callback that's invoked when the process to add or update a note in the cart completes successfully.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"onBuyerIdentityUpdateComplete?"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"() => void")),(0,r.yg)("td",{parentName:"tr",align:null},"A callback that's invoked when the process to update the buyer identity completes successfully.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"onAttributesUpdateComplete?"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"() => void")),(0,r.yg)("td",{parentName:"tr",align:null},"A callback that's invoked when the process to update the cart attributes completes successfully.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"onDiscountCodesUpdateComplete?"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"() => void")),(0,r.yg)("td",{parentName:"tr",align:null},"A callback that is invoked when the process to update the cart discount codes completes successfully.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"customerAccessToken?"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"CartBuyerIdentityInput['customerAccessToken']")),(0,r.yg)("td",{parentName:"tr",align:null},"The token that identifies the user that's logged in. This is necessary to associate the cart to an authenticated user.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"countryCode?"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"CountryCode")),(0,r.yg)("td",{parentName:"tr",align:null},"The ISO country code for i18n.")))),(0,r.yg)("h2",{id:"cart-fragment"},"Cart fragment"),(0,r.yg)("p",null,"You can provide the ",(0,r.yg)("inlineCode",{parentName:"p"},"cartFragment")," prop to ",(0,r.yg)("inlineCode",{parentName:"p"},"CartProvider")," to customize the fields requested from the Storefront API's ",(0,r.yg)("a",{parentName:"p",href:"https://shopify.dev/api/storefront/latest/objects/cart"},"Cart object")," for every query and mutation made by ",(0,r.yg)("inlineCode",{parentName:"p"},"CartProvider"),"."),(0,r.yg)("p",null,"The fragment must use the name ",(0,r.yg)("inlineCode",{parentName:"p"},"CartFragment")," because it's referenced that way in each of the queries and mutations. If you provide a custom ",(0,r.yg)("inlineCode",{parentName:"p"},"cartFragment"),", then it must be a raw string. For GraphQL syntax highlighting, you should use the ",(0,r.yg)("inlineCode",{parentName:"p"},"gql")," utility exported from ",(0,r.yg)("inlineCode",{parentName:"p"},"@shopify/hydrogen")," instead of ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/apollographql/graphql-tag"},(0,r.yg)("inlineCode",{parentName:"a"},"graphql-tag"))," because the latter returns an ",(0,r.yg)("inlineCode",{parentName:"p"},"ASTNode")," instead of a ",(0,r.yg)("inlineCode",{parentName:"p"},"string"),"."),(0,r.yg)("p",null,"If you don't provide a ",(0,r.yg)("inlineCode",{parentName:"p"},"cartFragment")," argument, then the following default value is used:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-graphql"},"fragment CartFragment on Cart {\n  id\n  checkoutUrl\n  totalQuantity\n  buyerIdentity {\n    countryCode\n    customer {\n      id\n      email\n      firstName\n      lastName\n      displayName\n    }\n    email\n    phone\n  }\n  lines(first: $numCartLines) {\n    edges {\n      node {\n        id\n        quantity\n        attributes {\n          key\n          value\n        }\n        cost {\n          totalAmount {\n            amount\n            currencyCode\n          }\n          compareAtAmountPerQuantity {\n            amount\n            currencyCode\n          }\n        }\n        merchandise {\n          ... on ProductVariant {\n            id\n            availableForSale\n            compareAtPriceV2 {\n              ...MoneyFragment\n            }\n            priceV2 {\n              ...MoneyFragment\n            }\n            requiresShipping\n            title\n            image {\n              ...ImageFragment\n            }\n            product {\n              handle\n              title\n            }\n            selectedOptions {\n              name\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n  cost {\n    subtotalAmount {\n      ...MoneyFragment\n    }\n    totalAmount {\n      ...MoneyFragment\n    }\n    totalDutyAmount {\n      ...MoneyFragment\n    }\n    totalTaxAmount {\n      ...MoneyFragment\n    }\n  }\n  note\n  attributes {\n    key\n    value\n  }\n  discountCodes {\n    code\n  }\n}\n\nfragment MoneyFragment on MoneyV2 {\n  currencyCode\n  amount\n}\nfragment ImageFragment on Image {\n  id\n  url\n  altText\n  width\n  height\n}\n")),(0,r.yg)("h2",{id:"component-type"},"Component type"),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"CartProvider")," component is a client component, which means that it renders on the client. For more information about component types, refer to ",(0,r.yg)("a",{parentName:"p",href:"https://shopify.dev/custom-storefronts/hydrogen/react-server-components"},"React Server Components"),"."),(0,r.yg)("h2",{id:"related-components"},"Related components"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/components/cart/addtocartbutton/"},(0,r.yg)("inlineCode",{parentName:"a"},"AddToCartButton"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/components/cart/cartcheckoutbutton/"},(0,r.yg)("inlineCode",{parentName:"a"},"CartCheckoutButton")))),(0,r.yg)("h2",{id:"related-hooks"},"Related hooks"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/hooks/cart/usecart/"},(0,r.yg)("inlineCode",{parentName:"a"},"useCart")))))}g.isMDXComponent=!0}}]);