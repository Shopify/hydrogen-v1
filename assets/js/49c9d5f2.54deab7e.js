"use strict";(self.webpackChunkdocs_v_1=self.webpackChunkdocs_v_1||[]).push([[1291],{5680:(e,n,o)=>{o.d(n,{xA:()=>u,yg:()=>y});var t=o(6540);function r(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function a(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,t)}return o}function i(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?a(Object(o),!0).forEach((function(n){r(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function s(e,n){if(null==e)return{};var o,t,r=function(e,n){if(null==e)return{};var o,t,r={},a=Object.keys(e);for(t=0;t<a.length;t++)o=a[t],n.indexOf(o)>=0||(r[o]=e[o]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)o=a[t],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var l=t.createContext({}),p=function(e){var n=t.useContext(l),o=n;return e&&(o="function"==typeof e?e(n):i(i({},n),e)),o},u=function(e){var n=p(e.components);return t.createElement(l.Provider,{value:n},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var o=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(o),d=r,y=c["".concat(l,".").concat(d)]||c[d]||g[d]||a;return o?t.createElement(y,i(i({ref:n},u),{},{components:o})):t.createElement(y,i({ref:n},u))}));function y(e,n){var o=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=o.length,i=new Array(a);i[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[c]="string"==typeof e?e:r,i[1]=s;for(var p=2;p<a;p++)i[p]=o[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,o)}d.displayName="MDXCreateElement"},6215:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>g,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var t=o(8168),r=(o(6540),o(5680));const a={},i="Hydrogen configuration",s={unversionedId:"tutorials/configuration/index",id:"tutorials/configuration/index",title:"Hydrogen configuration",description:"Hydrogen 2.0 is out now. These archival Hydrogen 1.0 docs are provided only to assist developers during their upgrade process. Please migrate as soon as possible.",source:"@site/docs/tutorials/configuration/index.md",sourceDirName:"tutorials/configuration",slug:"/tutorials/configuration/",permalink:"/hydrogen-v1/tutorials/configuration/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"hydrogen",previous:{title:"Testing best practices for Hydrogen",permalink:"/hydrogen-v1/tutorials/best-practices/testing"},next:{title:"Change the configuration file location",permalink:"/hydrogen-v1/tutorials/configuration/change-config-file-location"}},l={},p=[{value:"Example configuration",id:"example-configuration",level:2},{value:"Configuration properties",id:"configuration-properties",level:2},{value:"<code>logger</code>",id:"logger",level:3},{value:"<code>poweredByHeader</code>",id:"poweredbyheader",level:3},{value:"<code>routes</code>",id:"routes",level:3},{value:"<code>serverAnalyticsConnectors</code>",id:"serveranalyticsconnectors",level:3},{value:"<code>serverErrorPage</code>",id:"servererrorpage",level:3},{value:"<code>session</code>",id:"session",level:3},{value:"<code>shopify</code>",id:"shopify",level:3},{value:"<code>strictMode</code>",id:"strictmode",level:3},{value:"Change the configuration file location",id:"change-the-configuration-file-location",level:2},{value:"Related components",id:"related-components",level:2},{value:"Next steps",id:"next-steps",level:2}],u={toc:p},c="wrapper";function g(e){let{components:n,...o}=e;return(0,r.yg)(c,(0,t.A)({},u,o,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"hydrogen-configuration"},"Hydrogen configuration"),(0,r.yg)("admonition",{type:"tip"},(0,r.yg)("p",{parentName:"admonition"},"Hydrogen 2.0 is out now. These archival Hydrogen 1.0 docs are provided only to assist developers during their upgrade process. Please ",(0,r.yg)("a",{parentName:"p",href:"/migrate"},"migrate")," as soon as possible.")),(0,r.yg)("p",null,"The configuration properties for Hydrogen are located in the ",(0,r.yg)("inlineCode",{parentName:"p"},"hydrogen.config.js")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"hydrogen.config.ts")," file at the root of your project."),(0,r.yg)("p",null,"This guide describes Hydrogen's configuration properties and how to change the location of the configuration file."),(0,r.yg)("h2",{id:"example-configuration"},"Example configuration"),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"Note:\nIn the following example, environment variables are stored in ",(0,r.yg)("inlineCode",{parentName:"p"},"Oxygen.env"),". If you're not deploying to Oxygen, then you can choose a different storage location.")),(0,r.yg)("p",null,"The Hydrogen configuration file contains information that's needed at runtime for routing, connecting to the Storefront API, and many other options. The following example shows a basic Hydrogen configuration file:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"// hydrogen.config.ts\n\nimport {defineConfig} from '@shopify/hydrogen/config';\n\n/* The `defineConfig` function is an optional utility that provides types for the configuration object. */\nexport default defineConfig({\n  /* The routes defined by Vite's import.meta.globEager method. */\n  routes: '/src/routes',\n  /* The information that your app needs to connect to the Storefront API. */\n  shopify: {\n    /* The domain of your Shopify store */\n    storeDomain: '{shop_domain}.myshopify.com',\n    /* Your app's public Storefront API access token. Authenticates browser and client requests. */\n    storefrontToken: Oxygen?.env?.PUBLIC_STOREFRONT_API_TOKEN,\n    /* Your app's private Storefront API server (delegate access) token. Authenticates server requests. */\n    privateStorefrontToken: Oxygen?.env?.PRIVATE_STOREFRONT_API_TOKEN,\n    /* The Storefront API version that your app uses */\n    storefrontApiVersion: '2022-07',\n    /* (Optional) The unique ID for the storefront. Only gets assigned by Oxygen */\n    storefrontId: Oxygen?.env?.PUBLIC_STOREFRONT_ID,\n  },\n  /* A path to a custom page to render when the server encounters an unhandled exception */\n  serverErrorPage: '/src/Error.jsx',\n});\n")),(0,r.yg)("h2",{id:"configuration-properties"},"Configuration properties"),(0,r.yg)("p",null,"The following groupings of configuration properties can exist in Hydrogen:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#logger"},(0,r.yg)("inlineCode",{parentName:"a"},"logger"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#poweredbyheader"},(0,r.yg)("inlineCode",{parentName:"a"},"poweredByHeader"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#routes"},(0,r.yg)("inlineCode",{parentName:"a"},"routes"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#serveranalyticsconnectors"},(0,r.yg)("inlineCode",{parentName:"a"},"serverAnalyticsConnectors"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#servererrorpage"},(0,r.yg)("inlineCode",{parentName:"a"},"serverErrorPage"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#session"},(0,r.yg)("inlineCode",{parentName:"a"},"session"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#shopify"},(0,r.yg)("inlineCode",{parentName:"a"},"shopify"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#strictmode"},(0,r.yg)("inlineCode",{parentName:"a"},"strictMode")))),(0,r.yg)("h3",{id:"logger"},(0,r.yg)("inlineCode",{parentName:"h3"},"logger")),(0,r.yg)("p",null,"The default behavior of the ",(0,r.yg)("a",{parentName:"p",href:"/utilities/log/"},(0,r.yg)("inlineCode",{parentName:"a"},"log")," utility")," maps to the global ",(0,r.yg)("inlineCode",{parentName:"p"},"console")," object. However, you can also customize this behavior in the configuration object."),(0,r.yg)("p",null,"You can pass ",(0,r.yg)("a",{parentName:"p",href:"/hydrogen-v1/utilities/log#methods"},"any method")," of the ",(0,r.yg)("inlineCode",{parentName:"p"},"log")," utility in the ",(0,r.yg)("inlineCode",{parentName:"p"},"logger")," object to override the default behavior. The first argument of each log method contains a ",(0,r.yg)("inlineCode",{parentName:"p"},"request")," object if the log was called in the same context as a request. The following Boolean options are also available:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"// hydrogen.config.ts\n\nexport default defineConfig({\n  logger: {\n    /* Overrides the default `log.trace` behavior. */\n    trace: (request, ...args) => console.log(request.url, ...args),\n    /* Overrides the default `log.error` behavior. */\n    error: async (request, error) => {\n      console.error(error);\n      // Methods can return promises. Hydrogen won't block the current\n      // request but it will wait for the promises to be returned before the runtime instance ends.\n      await myErrorTrackingService.send(request, error);\n    },\n    /* ... */\n\n    /* Logs the cache status of each stored entry: `PUT`, `HIT`, `MISS` or `STALE`. */\n    showCacheApiStatus: true,\n    /* Logs the cache control headers of the main document and its sub queries. */\n    showCacheControlHeader: true,\n    /* Logs the timeline of when queries are being requested, resolved, and rendered.\n     * This is an experimental feature. As a result, functionality is subject to change.\n     * You can provide feedback on this feature by submitting an issue in GitHub:\n     * https://github.com/Shopify/hydrogen/issues.*/\n    showQueryTiming: true,\n    /* Logs warnings in your app if you're over-fetching data from the Storefront API.\n     * This is an experimental feature. As a result, functionality is subject to change.\n     * You can provide feedback on this feature by submitting an issue in GitHub:\n     * https://github.com/Shopify/hydrogen/issues. */\n    showUnusedQueryProperties: true,\n  },\n});\n")),(0,r.yg)("h3",{id:"poweredbyheader"},(0,r.yg)("inlineCode",{parentName:"h3"},"poweredByHeader")),(0,r.yg)("p",null,"By default, Hydrogen responds with the ",(0,r.yg)("inlineCode",{parentName:"p"},"powered-by: Shopify, Hydrogen")," header. You can disable this by adding ",(0,r.yg)("inlineCode",{parentName:"p"},"poweredByHeader: false")," to your config:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"// hydrogen.config.ts\n\nexport default defineConfig({\n  poweredByHeader: false,\n});\n")),(0,r.yg)("h3",{id:"routes"},(0,r.yg)("inlineCode",{parentName:"h3"},"routes")),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"routes")," property specifies a path to find server components and API handlers. The default value for the ",(0,r.yg)("inlineCode",{parentName:"p"},"routes")," property is ",(0,r.yg)("inlineCode",{parentName:"p"},"/src/routes"),", but you can specify the value to any path that starts from the project root:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"// hydrogen.config.ts\n\nexport default defineConfig({\n  /* Path from the project root to the files for server components and API handlers */\n  routes: '/path/to/routes',\n});\n")),(0,r.yg)("p",null,"If your app requires a more advanced configuration, then you can provide additional information about routes manually:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"// hydrogen.config.ts\n\nexport default defineConfig({\n  routes: {\n    /* Path from the project root to the files for server components and API handlers */\n    files: '/path/to/routes',\n    /* A path that's prepended to all file routes. You can modify `basePath`\n     * if you want to prefix all file routes. For example, you can prefix all file routes with a locale.\n     */\n    basePath: '/',\n  },\n});\n")),(0,r.yg)("h3",{id:"serveranalyticsconnectors"},(0,r.yg)("inlineCode",{parentName:"h3"},"serverAnalyticsConnectors")),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"serverAnalyticsConnectors")," property allows you to ",(0,r.yg)("a",{parentName:"p",href:"/hydrogen-v1/tutorials/analytics/#analytics-sent-from-the-server-side"},"send analytics data from the server")," in your Hydrogen app. For more information about analytics support in Hydrogen, refer to ",(0,r.yg)("a",{parentName:"p",href:"/tutorials/analytics/index"},"Analytics"),"."),(0,r.yg)("h3",{id:"servererrorpage"},(0,r.yg)("inlineCode",{parentName:"h3"},"serverErrorPage")),(0,r.yg)("p",null,"If an unexpected error occurs while rendering a route, then Hydrogen responds with a 500 HTTP error and renders a default error page at ",(0,r.yg)("inlineCode",{parentName:"p"},"/src/Error.{jsx,tsx}"),"."),(0,r.yg)("p",null,"You can define a custom error page with the ",(0,r.yg)("inlineCode",{parentName:"p"},"serverErrorPage")," configuration property. The custom error page is passed an ",(0,r.yg)("inlineCode",{parentName:"p"},"Error")," property. The following is an example:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"// /src/Error.jsx\n\nexport default function Error({error}) {\n  return (\n    <div>\n      <h1>An unknown error occured!</h1>\n      <h2>{error.message}</h2>\n      <h3>{error.stack}</h3>\n    </div>\n  );\n}\n")),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"Note:\nIf Hydrogen fails to render the custom error page, then it falls back to the default built-in Error page.")),(0,r.yg)("h3",{id:"session"},(0,r.yg)("inlineCode",{parentName:"h3"},"session")),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"session")," property allows you to configure sessions support in your Hydrogen storefront. Learn moore about configuring ",(0,r.yg)("a",{parentName:"p",href:"/tutorials/sessions/"},"sessions support")," in Hydrogen storefronts."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"// hydrogen.config.ts\n\nimport {defineConfig, CookieSessionStorage} from '@shopify/hydrogen/config';\n\nexport default defineConfig({\n  /* The default session storage mechanism for Hydrogen. */\n  session: CookieSessionStorage('__session', {\n    /* Tells the browser that the cookie should only be sent to the server if it's within the defined path.  */\n    path: '/',\n    /* Whether to secure the cookie so that client-side JavaScript can't read the cookie. */\n    httpOnly: true,\n    /* Whether to secure the cookie so that the browser only sends the cookie over HTTPS.  */\n    secure: process.env.NODE_ENV === 'production',\n    /* Declares that the cookie should be restricted to a first-party or same-site context.  */\n    sameSite: 'strict',\n    /* The number of seconds until the cookie expires. */\n    maxAge: 60 * 60 * 24 * 30,\n  }),\n});\n")),(0,r.yg)("h3",{id:"shopify"},(0,r.yg)("inlineCode",{parentName:"h3"},"shopify")),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"shopify")," property contains all the information that your app needs to connect to the Storefront API. This configuration is passed automatically to the ",(0,r.yg)("a",{parentName:"p",href:"/components/global/shopifyprovider/"},(0,r.yg)("inlineCode",{parentName:"a"},"ShopifyProvider"))," component in your app."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"// hydrogen.config.ts\n\nexport default defineConfig({\n  shopify: {\n    /* The app's default language */\n    defaultLanguage: 'EN',\n    /* The app's default country */\n    defaultCountry: 'US',\n    /* The domain of your Shopify store */\n    storeDomain: '{shop_domain}.myshopify.com',\n    /* Your app's Storefront API access token */\n    storefrontToken: '{storefront_api_access_token}',\n    /* The Storefront API version that your app uses */\n    storefrontApiVersion: '2022-07',\n  },\n});\n")),(0,r.yg)("p",null,"For advanced use cases, you can provide a function that returns the same properties. For example, this approach is useful when the Storefront API connection varies depending on the domain or a subpath of the URL:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"// hydrogen.config.ts\n\nlet myShopifyConfigCache = {};\n\nexport default defineConfig({\n  shopify: (request: HydrogenRequest) => {\n    // For example, you can change the configuration based on the normalized URL\n    const url = new URL(request.normalizedUrl);\n    const [firstUrlPart] = url.pathname.split('/');\n\n    if (myShopifyConfigCache[firstUrlPart]) {\n      // Return the cached version synchronously\n      // to avoid Suspense fallback\n      return myShopifyConfigCache[firstUrlPart];\n    }\n\n    // Fetch the needed information and cache it\n    return fetch(`https://myApi.com/?${firstUrlPart}`)\n      .then((response) => response.json())\n      .then(({storeDomain, storefrontToken}) => {\n        myShopifyConfigCache[firstUrlPart] = {\n          storeDomain,\n          storefrontToken,\n          storefrontApiVersion: '2022-07',\n        };\n\n        return myShopifyConfigCache[firstUrlPart];\n      });\n  },\n  // ...\n};\n")),(0,r.yg)("p",null,"The function is called inside the ",(0,r.yg)("a",{parentName:"p",href:"/components/global/shopifyprovider/"},(0,r.yg)("inlineCode",{parentName:"a"},"ShopifyProvider"))," component in your app. This means that Suspense fallbacks are shown while resolving the configuration if a promise is returned."),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"Tip:\nConsider caching the result of the function to speed up subsequent requests.")),(0,r.yg)("h3",{id:"strictmode"},(0,r.yg)("inlineCode",{parentName:"h3"},"strictMode")),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://reactjs.org/docs/strict-mode.html"},"Strict mode")," is enabled by default for all Hydrogen storefronts in development. It includes ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/reactwg/react-18/discussions/19"},"strict effects"),", which mounts and unmounts components multiple times to catch potential issues with user or third-party code."),(0,r.yg)("p",null,"If strict effects cause problems for your app, then you can turn off strict mode."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"// hydrogen.config.ts\n\nexport default defineConfig({\n  strictMode: false,\n});\n")),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"Caution:\nIf you turn off strict mode, then we recommended that you still include the ",(0,r.yg)("inlineCode",{parentName:"p"},"StrictMode")," component at as high of a level as possible in your React tree to catch errors.")),(0,r.yg)("h2",{id:"change-the-configuration-file-location"},"Change the configuration file location"),(0,r.yg)("p",null,"If you don't want the Hydrogen configuration file located at the root of your project, then you can ",(0,r.yg)("a",{parentName:"p",href:"/tutorials/configuration/change-config-file-location/"},"change the config file location"),"."),(0,r.yg)("h2",{id:"related-components"},"Related components"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/components/global/shopifyprovider/"},(0,r.yg)("inlineCode",{parentName:"a"},"ShopifyProvider")))),(0,r.yg)("h2",{id:"next-steps"},"Next steps"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Learn about ",(0,r.yg)("a",{parentName:"li",href:"/tutorials/react-server-components/"},"React Server Components"),", an opinionated data-fetching and rendering workflow for React apps."),(0,r.yg)("li",{parentName:"ul"},"Get familiar with the ",(0,r.yg)("a",{parentName:"li",href:"/tutorials/routing/"},"file-based routing system")," that Hydrogen uses."),(0,r.yg)("li",{parentName:"ul"},"Learn about the Hydrogen framework's built-in support for ",(0,r.yg)("a",{parentName:"li",href:"/tutorials/sessions/"},"session management"),"."),(0,r.yg)("li",{parentName:"ul"},"Learn about the ",(0,r.yg)("a",{parentName:"li",href:"/tutorials/analytics/"},"analytics support")," built into Hydrogen.")))}g.isMDXComponent=!0}}]);